{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}
{% set img = content.field_image['#items'].entity.uri.value %}
{% if img is not null %}
	{% set img_url = file_url(img) %}
{% else %}
	{% set img_url = '/' %}
{% endif %}
<article{{ attributes.addClass(classes) }}>
	<section class="wrapper bg-soft-primary">
		<div class="container pt-14 pb-19 pt-md-18 pb-md-20 text-center">
			<div class="row">
				<div class="col-md-10 col-xl-8 mx-auto">
					<div class="post-header">
						<div class="post-category text-line">
							{{ content.field_blog_category }}
						</div>
						<!-- /.post-category -->
						<h1 class="display-1 mb-4">{{ label }}</h1>
						<ul class="post-meta mb-5">
							{% if display_submitted %} <li class="post-date"><i class="uil uil-calendar-alt"></i><span>{{ node.getCreatedTime|date('d M Y') }}</span></li> {% endif %}
							<li class="post-author"><i class="uil uil-user"></i><span>By {{ author_name }}</span></li>
							<li class="post-comments"><a href="#comments"><i class="uil uil-comment"></i>{{ node.comment.comment_count }}<span> Comments</span></a></li>
						</ul>
						<!-- /.post-meta -->
					</div>
					<!-- /.post-header -->
				</div>
				<!-- /column -->
			</div>
			<!-- /.row -->
		</div>
		<!-- /.container -->
	</section>

	<section class="wrapper bg-light">
		<div class="container space-0 pb-14 pb-md-16">
			<div class="row">
				<div class="col-lg-10 mx-auto">
					<div class="blog single mt-n17">
						<div class="card">
							<figure class="card-img-top">{{ content.field_image }}</figure>
							<div class="card-body">
								<div class="classic-view">
									<article class="post">
										{{ content|without('field_blog_category','field_image','field_background_image','comment','field_video','field_mainmenu_transparent','field_mainmenu_absolute') }}
									</article>
								</div>
								<hr>
								<div class="author-info">
									<div class="d-md-flex align-items-center mb-3">
										<div class="d-flex align-items-center">
											<figure class="user-avatar rounded-circle">{{ author_picture }}</figure>
											<div>
												<h6>{{ node.getOwner.field_user_name.value }}</h6>
												<span class="post-meta fs-15">{{ node.getOwner.field_user_role.value }}</span>
											</div>
										</div>
										<div class="mt-3 mt-md-0 ms-auto">
											<a href="/user/{{ node.getOwnerId }}" class="btn btn-sm btn-soft-ash rounded-pill btn-icon btn-icon-start mb-0"><i class="uil uil-file-alt"></i> All Posts</a>
										</div>
									</div>
									<div class="user-description">{{ node.getOwner.field_user_description.value }}</div>
								</div>								
								<hr>
								<div id="comments">
									{{ content.comment }}
								</div>
							</div>

						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
</article>
